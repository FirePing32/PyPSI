name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  deploy-pypi:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install setuptools wheel twine
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: ./PythonPSI/about.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
  deploy-release:
    needs: [deploy-pypi]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install setuptools wheel twine
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: ./PythonPSI/about.txt
    - name: Read changelog
      id: changelog
      uses: juliangruber/read-file-action@v1
      with:
        path: ./PythonPSI/changelog.txt
    - name: Build
      run: |
        python setup.py sdist bdist_wheel
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.content }}
        release_name: v${{ steps.version.outputs.content }}
        body: ${{ steps.changelog.outputs.content }}
        draft: false
        prerelease: false
    - name: Prepare assets
      run: zip -r dist.zip dist
    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip